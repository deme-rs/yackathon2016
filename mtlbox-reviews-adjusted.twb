<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='rounding_factor' datatype='real' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0000000000000001e-09'>
        <calculation class='tableau' formula='1.0000000000000001e-09' />
      </column>
      <column caption='Festival' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Festiblues (11/8-14/8)&quot;'>
        <calculation class='tableau' formula='&quot;Festiblues (11/8-14/8)&quot;' />
        <members>
          <member value='&quot;Eureka (10/6-12/6)&quot;' />
          <member value='&quot;Festiblues (11/8-14/8)&quot;' />
          <member value='&quot;Festival de musique de Lachine (26/6-18/7)&quot;' />
          <member value='&quot;Mutek (1/7-6/7)&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='yelp-mtl-reviews-adjusted' inline='true' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' version='9.3'>
      <connection class='textscan' directory='C:/perso/pley/yackathon2016' filename='yelp-mtl-reviews-adjusted.csv' password='' server=''>
        <relation name='yelp-mtl-reviews-adjusted.csv' table='[yelp-mtl-reviews-adjusted#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Business Name' ordinal='0' />
            <column datatype='date' name='Review Date' ordinal='1' />
            <column datatype='real' name='Adjusted # of reviews' ordinal='2' />
            <column datatype='real' name='Latitude' ordinal='3' />
            <column datatype='real' name='Longitude' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Business Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Business Name]</local-name>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias>Business Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Review Date]</local-name>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias>Review Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adjusted # of reviews</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adjusted # of reviews]</local-name>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias>Adjusted # of reviews</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[yelp-mtl-reviews-adjusted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Traffic Factor' datatype='real' name='[Adjusted # of reviews]' role='measure' type='quantitative' />
      <column datatype='string' name='[Business Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Business Name]' default='&quot;Zytynsky&apos;s Deli&quot;'>
          <bin value='&quot;Comic Hunter&quot;'>
            <value>&quot;Comic Hunter&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Zytynsky&apos;s Deli&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='string' name='[Business Name]' role='dimension' type='nominal' />
      <column caption='target_long' datatype='real' name='[Calculation_1476899203079938053]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then -73.65&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then -73.6789513&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then -73.56609&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then -73.5498626&#13;&#10;else 0.0&#13;&#10;end' />
      </column>
      <column caption='target_lat' datatype='real' name='[Calculation_1476899203082321927]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then 45.56&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then 45.4326559&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then 45.50745&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then 45.5051016&#13;&#10;else 0.0&#13;&#10;end' />
      </column>
      <column caption='distance_from_festival' datatype='real' name='[Calculation_1476899203087855624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sqrt((cos([Calculation_1476899203082321927]*PI()/180)*cos([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*cos([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(cos([Calculation_1476899203082321927]*PI()/180)*sin([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*sin([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(SIN([Calculation_1476899203082321927]*PI()/180)-sin([Latitude]*PI()/180))^2)*6300' />
      </column>
      <column aggregation='Avg' caption='latitude_round' datatype='real' name='[Calculation_1931762765485756416]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='int([Latitude]/[Parameters].[Parameter 1])*[Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Avg' caption='longitude_round' datatype='real' name='[Calculation_1931762765485932545]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='int([Longitude]/[Parameters].[Parameter 1])*[Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
      <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Review Date]' derivation='Week' name='[wk:Review Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Review Date]' derivation='Year' name='[yr:Review Date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.3125' measure-ordering='alphabetic' measure-percentage='0.381696' parameter-percentage='0.305804' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Review Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2012</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2009</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:Review Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2012</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2009</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:Review Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2012</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2014</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2013</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2009</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Business Name (group)]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Comic Hunter&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Zytynsky&apos;s Deli&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='rounding_factor' datatype='real' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0000000000000001e-09'>
          <calculation class='tableau' formula='1.0000000000000001e-09' />
        </column>
        <column caption='Festival' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Festiblues (11/8-14/8)&quot;'>
          <calculation class='tableau' formula='&quot;Festiblues (11/8-14/8)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='la-vitrine' inline='true' name='textscan.09mbj5503edf6m13ht3hz0krxog6' version='9.3'>
      <connection class='textscan' directory='C:/perso/pley/yackathon2016' filename='la-vitrine.csv' password='' server=''>
        <relation name='la-vitrine.csv' table='[la-vitrine#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Festival' ordinal='0' />
            <column datatype='real' name='Latitude' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='integer' name='startDay' ordinal='3' />
            <column datatype='integer' name='endDay' ordinal='4' />
            <column datatype='integer' name='startMonth' ordinal='5' />
            <column datatype='integer' name='endMonth' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Festival</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Festival]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>Festival</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startDay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startDay]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>startDay</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endDay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endDay]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>endDay</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startMonth]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>startMonth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endMonth]</local-name>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias>endMonth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[la-vitrine.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Festival!' datatype='string' name='[Calculation_1931762765494984706]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Festival]+&apos; (&apos;+str([startDay])+&apos;/&apos;+str([startMonth])+&apos;-&apos;+str([endDay])+&apos;/&apos;+str([endMonth])+&apos;)&apos;' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.285714' measure-ordering='alphabetic' measure-percentage='0.470982' parameter-percentage='0.243304' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
      <datasources>
        <datasource caption='yelp-mtl-reviews-adjusted' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' />
      </datasources>
      <datasource-dependencies datasource='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
        <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
        <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[mn:Review Date:ok]' member='6' />
          <groupfilter function='member' level='[mn:Review Date:ok]' member='7' />
          <groupfilter function='member' level='[mn:Review Date:ok]' member='8' />
          <groupfilter function='member' level='[mn:Review Date:ok]' member='9' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Festival Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp-mtl-reviews-adjusted' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='rounding_factor' datatype='real' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0000000000000001e-09'>
              <calculation class='tableau' formula='1.0000000000000001e-09' />
            </column>
            <column caption='Festival' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Festiblues (11/8-14/8)&quot;'>
              <calculation class='tableau' formula='&quot;Festiblues (11/8-14/8)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
            <column caption='Traffic Factor' datatype='real' name='[Adjusted # of reviews]' role='measure' type='quantitative' />
            <column datatype='string' name='[Business Name]' role='dimension' type='nominal' />
            <column caption='target_long' datatype='real' name='[Calculation_1476899203079938053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then -73.65&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then -73.6789513&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then -73.56609&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then -73.5498626&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='target_lat' datatype='real' name='[Calculation_1476899203082321927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then 45.56&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then 45.4326559&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then 45.50745&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then 45.5051016&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='distance_from_festival' datatype='real' name='[Calculation_1476899203087855624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt((cos([Calculation_1476899203082321927]*PI()/180)*cos([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*cos([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(cos([Calculation_1476899203082321927]*PI()/180)*sin([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*sin([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(SIN([Calculation_1476899203082321927]*PI()/180)-sin([Latitude]*PI()/180))^2)*6300' />
            </column>
            <column aggregation='Avg' caption='latitude_round' datatype='real' name='[Calculation_1931762765485756416]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='int([Latitude]/[Parameters].[Parameter 1])*[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' caption='longitude_round' datatype='real' name='[Calculation_1931762765485932545]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='int([Longitude]/[Parameters].[Parameter 1])*[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
            <column-instance column='[Adjusted # of reviews]' derivation='Avg' name='[avg:Adjusted # of reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1476899203087855624]' derivation='Avg' name='[avg:Calculation_1476899203087855624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1931762765485756416]' derivation='Avg' name='[avg:Calculation_1931762765485756416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1931762765485932545]' derivation='Avg' name='[avg:Calculation_1931762765485932545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Business Name]' derivation='None' name='[none:Business Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted # of reviews]' derivation='Sum' name='[sum:Adjusted # of reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' included-values='in-range'>
            <max>3.0</max>
          </filter>
          <slices>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</column>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1931762765485932545:qk]' field-type='quantitative' max='-8190782.084451057' min='-8211058.0119540729' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1931762765485756416:qk]' field-type='quantitative' max='5714368.220529655' min='5704519.9128853325' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='quantsize' />
            <encoding attr='color' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' max='5.0' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#cfc1ba</color>
                <color>#d4b8aa</color>
                <color>#d9ae98</color>
                <color>#dfa385</color>
                <color>#e49872</color>
                <color>#e98c5d</color>
                <color>#ef7f47</color>
                <color>#f47230</color>
                <color>#f96318</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Adjusted # of reviews:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' />
              <lod column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Adjusted # of reviews:qk]' />
              <lod column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]' />
              <color column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1931762765485756416:qk]</rows>
        <cols>([textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok] * [textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1931762765485932545:qk])</cols>
        <page-trail-options mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='Number of Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp-mtl-reviews-adjusted' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Festival' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Festiblues (11/8-14/8)&quot;'>
              <calculation class='tableau' formula='&quot;Festiblues (11/8-14/8)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
            <column caption='Traffic Factor' datatype='real' name='[Adjusted # of reviews]' role='measure' type='quantitative' />
            <column datatype='string' name='[Business Name]' role='dimension' type='nominal' />
            <column caption='target_long' datatype='real' name='[Calculation_1476899203079938053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then -73.65&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then -73.6789513&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then -73.56609&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then -73.5498626&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='target_lat' datatype='real' name='[Calculation_1476899203082321927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then 45.56&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then 45.4326559&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then 45.50745&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then 45.5051016&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='distance_from_festival' datatype='real' name='[Calculation_1476899203087855624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt((cos([Calculation_1476899203082321927]*PI()/180)*cos([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*cos([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(cos([Calculation_1476899203082321927]*PI()/180)*sin([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*sin([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(SIN([Calculation_1476899203082321927]*PI()/180)-sin([Latitude]*PI()/180))^2)*6300' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1476899203087855624]' derivation='Avg' name='[avg:Calculation_1476899203087855624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Business Name]' derivation='None' name='[none:Business Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted # of reviews]' derivation='Sum' name='[sum:Adjusted # of reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' included-values='in-range'>
            <max>3.0</max>
          </filter>
          <slices>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</column>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]' value='bold' />
            <format attr='height' value='41' />
            <format attr='width' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]' value='310' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='quantsize' />
            <encoding attr='color' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' max='5.0' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#cfc1ba</color>
                <color>#d4b8aa</color>
                <color>#d9ae98</color>
                <color>#dfa385</color>
                <color>#e49872</color>
                <color>#e98c5d</color>
                <color>#ef7f47</color>
                <color>#f47230</color>
                <color>#f96318</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' />
              <lod column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='408' />
                <format attr='maxwidth' value='408' />
                <format attr='minheight' value='533' />
                <format attr='maxheight' value='533' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='408' />
                <format attr='maxwidth' value='408' />
                <format attr='minheight' value='533' />
                <format attr='maxheight' value='533' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</cols>
        <page-trail-options mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='Traffic by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp-mtl-reviews-adjusted' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Festival' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Festiblues (11/8-14/8)&quot;'>
              <calculation class='tableau' formula='&quot;Festiblues (11/8-14/8)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
            <column caption='Traffic Factor' datatype='real' name='[Adjusted # of reviews]' role='measure' type='quantitative' />
            <column datatype='string' name='[Business Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Business Name]' default='&quot;Zytynsky&apos;s Deli&quot;'>
                <bin value='&quot;Comic Hunter&quot;'>
                  <value>&quot;Comic Hunter&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Zytynsky&apos;s Deli&quot;' value='Other' />
              </aliases>
            </column>
            <column datatype='string' name='[Business Name]' role='dimension' type='nominal' />
            <column caption='target_long' datatype='real' name='[Calculation_1476899203079938053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then -73.65&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then -73.6789513&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then -73.56609&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then -73.5498626&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='target_lat' datatype='real' name='[Calculation_1476899203082321927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &apos;Festiblues (11/8-14/8)&apos; then 45.56&#13;&#10;when &apos;Festival de musique de Lachine (26/6-18/7)&apos; then 45.4326559&#13;&#10;when &apos;Mutek (1/7-6/7)&apos; then 45.50745&#13;&#10;when &apos;Eureka (10/6-12/6)&apos; then 45.5051016&#13;&#10;else 0.0&#13;&#10;end' />
            </column>
            <column caption='distance_from_festival' datatype='real' name='[Calculation_1476899203087855624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt((cos([Calculation_1476899203082321927]*PI()/180)*cos([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*cos([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(cos([Calculation_1476899203082321927]*PI()/180)*sin([Calculation_1476899203079938053]*PI()/180)-cos([Latitude]*PI()/180)*sin([Longitude]*PI()/180))^2&#13;&#10;+&#13;&#10;(SIN([Calculation_1476899203082321927]*PI()/180)-sin([Latitude]*PI()/180))^2)*6300' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1476899203087855624]' derivation='Avg' name='[avg:Calculation_1476899203087855624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Business Name]' derivation='None' name='[none:Business Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Adjusted # of reviews]' derivation='Sum' name='[sum:Adjusted # of reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' included-values='in-range'>
            <max>3.0</max>
          </filter>
          <filter class='categorical' column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]'>
            <groupfilter expression='CONTAINS(LOWER([Business Name]), LOWER(&apos;andrea&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='andrea' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:Business Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</column>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</column>
            <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' value='44' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='quantsize' />
            <encoding attr='color' field='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' max='5.0' palette='tableau-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]' />
              <color column='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[Business Name (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='533' />
                <format attr='maxheight' value='533' />
                <format attr='minwidth' value='780' />
                <format attr='maxwidth' value='780' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='780' />
                <format attr='maxwidth' value='780' />
                <format attr='minheight' value='533' />
                <format attr='maxheight' value='533' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]</rows>
        <cols>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</cols>
        <show-full-range>
          <column>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[Review Date]</column>
        </show-full-range>
        <page-trail-options mark-type='all' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Influence of festivals on commerce'>
      <style />
      <size maxheight='700' maxwidth='1280' minheight='700' minwidth='1280' />
      <datasources>
        <datasource caption='yelp-mtl-reviews-adjusted' name='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w' />
      </datasources>
      <datasource-dependencies datasource='textscan.0zcyz9o0xt8a5b11d2uea0m65p7w'>
        <column datatype='date' name='[Review Date]' role='dimension' type='ordinal' />
        <column-instance column='[Review Date]' derivation='Month' name='[mn:Review Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='89286' id='5' param='horz' type='layout-flow' w='100000' x='0' y='10714'>
            <zone h='89286' id='3' type='layout-basic' w='99687' x='0' y='10714'>
              <zone h='45000' id='1' name='Traffic by Month' show-title='true' w='99687' x='0' y='55000' />
              <zone h='29762' id='8' name='Festival Location' show-title='true' w='99687' x='0' y='10714' />
              <zone h='14524' id='10' name='Number of Reviews' show-title='true' w='99687' x='0' y='40476' />
            </zone>
          </zone>
          <zone h='10714' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='10714' id='7' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='81795' x='0' y='0' />
            <zone fixed-size='221' h='10714' id='12' is-fixed='true' name='Number of Reviews' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]' type='filter' w='17892' x='81795' y='0' />
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='dashboard' maximized='true' name='Influence of festivals on commerce'>
      <viewpoints>
        <viewpoint name='Festival Location'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Number of Reviews' />
        <viewpoint name='Traffic by Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='worksheet' name='Festival Location'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card size='15' type='pages' />
            <card size='31' type='filters' />
            <card size='254' type='marks' />
            <card pane-specification-id='5' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' size='0' type='size' />
            <card pane-specification-id='5' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' size='36' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.09mbj5503edf6m13ht3hz0krxog6].[none:Festival:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Latitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Longitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Review Date:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[yr:Review Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of Reviews'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[sum:Adjusted # of reviews:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.09mbj5503edf6m13ht3hz0krxog6].[none:Festival:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Latitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Longitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Review Date:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[yr:Review Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Traffic by Month'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[Business Name (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='pattern' param='[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.09mbj5503edf6m13ht3hz0krxog6].[none:Festival:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[avg:Calculation_1476899203087855624:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[mn:Review Date:ok]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Business Name:nk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Latitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Longitude:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[none:Review Date:qk]</field>
            <field>[textscan.0zcyz9o0xt8a5b11d2uea0m65p7w].[yr:Review Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Influence of festivals on commerce' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Festival Location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Traffic by Month' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
